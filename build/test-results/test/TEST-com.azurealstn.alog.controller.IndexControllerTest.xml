<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.azurealstn.alog.controller.IndexControllerTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-12-04T11:02:01" hostname="DESKTOP-4HIAQNR" time="0.546">
  <properties/>
  <testcase name="메인 페이지 호출 테스트" classname="com.azurealstn.alog.controller.IndexControllerTest" time="0.546"/>
  <system-out><![CDATA[2022-12-04 20:02:01.399  INFO 8024 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.azurealstn.alog.controller.IndexControllerTest], using SpringBootContextLoader
2022-12-04 20:02:01.399  INFO 8024 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.azurealstn.alog.controller.IndexControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2022-12-04 20:02:01.399  INFO 8024 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.azurealstn.alog.controller.IndexControllerTest]: IndexControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2022-12-04 20:02:01.399  INFO 8024 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.azurealstn.alog.AlogApplication for test class com.azurealstn.alog.controller.IndexControllerTest
2022-12-04 20:02:01.399  INFO 8024 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2022-12-04 20:02:01.399  INFO 8024 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7aca4144, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@a19fe87, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@26aecf31, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77fa509a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5f92ef40, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1abacff3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4a3d4cd2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6f66ab8f, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@2746b1cc, org.springframework.test.context.event.EventPublishingTestExecutionListener@6bcf2780, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@4bb4adf7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@11544ddd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@38e46ea, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@116f823c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7f5a5ef3, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@4c53ce60, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3d1b6816]
2022-12-04 20:02:01.415  INFO 8024 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2022-12-04 20:02:01.415  INFO 8024 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-04 20:02:01.415  INFO 8024 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_ where posts0_.secret=?
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_ where posts0_.secret=? order by posts0_.posts_id desc limit ?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.azurealstn.alog.controller.IndexController
           Method = com.azurealstn.alog.controller.IndexController#index(Model, PostsSearchDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = searchDto
            value = PostsSearchDto(page=1, size=12, basePageDto=BasePageDto(startPage=1, endPage=1, prevPage=false, nextPage=false, totalRowCount=0, totalPageCount=1), searchValue=null)
           errors = []
        Attribute = postsList
            value = []
        Attribute = movePrevPage
            value = 0
        Attribute = moveNextPage
            value = 2
        Attribute = pagination
            value = [1]
        Attribute = hasDoubleNextPage
            value = false
        Attribute = doubleNextPage
            value = 11
        Attribute = hasDoublePrevPage
            value = false
        Attribute = doublePrevPage
            value = -9

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- SEO -->
    <meta name="description" content="이 사이트는 velog를 클론코딩한 alog 입니다. 이제 react가 아닌 mustache를 더한">
    <meta name="keywords" content="프론트엔드, 백엔드, 풀스택, alog, velog, 클론코딩, 사이드 프로젝트">
    <meta name="author" content="azurealstn">
    <title>alog</title>

    <!-- Open Graph (Facebook, Linkedin) -->
    <meta property="og:url" content="https://velog.io/">
    <meta property="og:type" content="website">
    <meta property="og:title" content="velog 클론코딩한 alog">
    <meta property="og:description" content="이 사이트는 velog를 클론코딩한 alog 입니다. 이제 react가 아닌 mustache를 더한">
    <meta property="og:image" content="/images/online.jpg">
    <meta property="og:image:secure_url" content="/images/online.jpg">
    <meta property="og:site_name" content="velog 클론코딩">
    <meta property="og:locale" content="ko-KR">

    <!-- twitter card -->
    <meta name="twitter:card" content="summary">
    <meta name="twitter:title" content="velog 클론코딩한 alog">
    <meta name="twitter:description" content="이 사이트는 velog를 클론코딩한 alog 입니다. 이제 react가 아닌 mustache를 더한">
    <meta name="twitter:image" content="/images/online.jpg">
    <meta name="twitter:url" content="https://velog.io/">
    <meta name="twitter:site" content="@azurealstn">
    <meta name="twitter:creator" content="@azurealstn">

    <!-- fabicon -->
    <link rel="icon" type="image/png" sizes="512x512" href="/images/leaf-fabicon.png">

    <!-- apple fabicon -->
    <link rel="apple-touch-icon" sizes="512x512" href="/images/leaf-fabicon.png">

    <!-- CSS Reset -->
    <link rel="stylesheet" href="/css/normalize.css">

    <!-- FontAwesome -->
    <script src="https://kit.fontawesome.com/32f48298df.js" crossorigin="anonymous"></script>

    <!-- Font -->
    <link href='//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSansNeo.css' rel='stylesheet' type='text/css'>
    <link href="https://fonts.googleapis.com/css2?family=Concert+One&family=Fuzzy+Bubbles:wght@700&family=Nanum+Gothic&family=Silkscreen&display=swap" rel="stylesheet">

    <!-- Toast   -->
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">

    <!-- CSS load -->
    <link rel="stylesheet" href="/css/style.css">

    <script src="https://code.jquery.com/jquery-3.6.1.min.js" integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=" crossorigin="anonymous" defer></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js" defer></script>
    <script src="/js/index.js" defer></script>

</head>
<body>
<!-- header -->
<div class="root">
    <header>
        <div class="header">
            <div class="head-container">
                <div class="head-logo">
                    <a href="/">alog</a>
                </div>
                <div class="head-content">
                    <a href="/api/v1/auth/search" class="search">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </a>
                        <button class="head-btn head-login" id="show-btn">로그인</button>
                </div>
            </div>
        </div>
    </header>

<!-- main section -->
<section class="main">
    <div class="main-container">
        <main class="main-content">
            <div class="posts-order">
                <div class="order-content">
                    <div class="order">
                        <a id="latest" href="/">
                            <i class="fa-regular fa-clock"></i>
                            최신
                        </a>
                        <a id="popular" href="/api/v1/auth/popular">
                            <i class="fa-solid fa-fire"></i>
                            인기
                        </a>
                        <div class="category-underline"></div>
                    </div>
                </div>
            </div>
            <div class="posts-content">
            </div>
            <nav class="pagination">
                <input type="hidden" id="startPage" value="1" />
                <input type="hidden" id="endPage" value="1" />
                <ul class="pagination-list">

                        <li><a href="?page=1" class="pagination-link" data-value=1>1</a></li>

                </ul>
            </nav>
        </main>
    </div>
</section>

<!-- modal -->
<div class="modal-bg" id="modal-bg-hide"></div>
<div class="modal-container" id="modal-container-hide">
    <div class="wrapper">
        <div class="gray-block">
            <div>
                <img src="/images/pumpkin.png" alt="welcome">
                <div class="welcome">Welcome!</div>
            </div>
        </div>
        <div class="white-block">
            <div class="exit-wrapper">
                <button id="hide-btn"><i class="fa-solid fa-xmark"></i></button>
            </div>
            <div class="block-content">
                <div class="content-wrapper">
                    <div class="upper-wrapper">
                        <h2 class="change-login">로그인</h2>
                        <section>
                            <h4>이메일로 <span class="change-login">로그인</span></h4>
                            <form class="login-form" onsubmit="return false">
                                <input autocomplete="off" type="text" id="email" name="email" placeholder="이메일을 입력하세요.">
                                <button class="login-btn change-login" id="login-btn">로그인</button>
                            </form>
                            <div class="message" style="display: none;">
                                <i class="fa-solid fa-check"></i>
                                <div class="message-description">
                                    <span class="emailCheck">회원가입</span> 링크가 이메일로 전송되었습니다.
                                </div>
                            </div>
                        </section>
                        <section>
                            <h4>소셜 계정으로 <span class="change-login">로그인</span></h4>
                            <div class="social-login">
                                <a href="/oauth2/authorization/google" class="social-link" style="background: white;">
                                    <img class="google" src="/images/social-google.png" alt="google">
                                </a>
                                <a href="/oauth2/authorization/naver" class="social-link">
                                    <img src="/images/social-naver.png" alt="naver">
                                </a>
                                <a href="/oauth2/authorization/kakao" class="social-link" style="background: #FDDC00;">
                                    <img src="/images/social-kakao.png" alt="kakao">
                                </a>
                            </div>
                        </section>
                    </div>
                    <div class="foot">
                        <span class="member">아직 회원이 아니신가요?</span>
                        <div class="link">회원가입</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- footer -->
<footer class="footer">
    <p class="copyright">
        © 2022 | created by <span class="strong">alog</span>
        <br>
        Theme by <span class="strong">azurealstn</span>
    </p>
</footer>

</div>
</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: select commentlis0_.member_id as member_i8_0_0_, commentlis0_.comment_id as comment_1_0_0_, commentlis0_.comment_id as comment_1_0_1_, commentlis0_.created_date as created_2_0_1_, commentlis0_.modified_date as modified3_0_1_, commentlis0_.content as content4_0_1_, commentlis0_.is_comment_me as is_comme5_0_1_, commentlis0_.level as level6_0_1_, commentlis0_.member_id as member_i8_0_1_, commentlis0_.posts_id as posts_id9_0_1_, commentlis0_.up_comment_id as up_comme7_0_1_ from comment commentlis0_ where commentlis0_.member_id=?
Hibernate: select memberimag0_.member_id as member_i8_4_0_, memberimag0_.member_image_id as member_i1_4_0_, memberimag0_.member_image_id as member_i1_4_1_, memberimag0_.created_date as created_2_4_1_, memberimag0_.modified_date as modified3_4_1_, memberimag0_.image_url as image_ur4_4_1_, memberimag0_.member_id as member_i8_4_1_, memberimag0_.original_filename as original5_4_1_, memberimag0_.store_filename as store_fi6_4_1_, memberimag0_.thumbnail_yn as thumbnai7_4_1_ from member_image memberimag0_ where memberimag0_.member_id=?
Hibernate: select postslikel0_.member_id as member_i4_8_0_, postslikel0_.id as id1_8_0_, postslikel0_.id as id1_8_1_, postslikel0_.created_date as created_2_8_1_, postslikel0_.modified_date as modified3_8_1_, postslikel0_.member_id as member_i4_8_1_, postslikel0_.posts_id as posts_id5_8_1_ from posts_like postslikel0_ where postslikel0_.member_id=?
Hibernate: select postslist0_.member_id as member_i9_5_0_, postslist0_.posts_id as posts_id1_5_0_, postslist0_.posts_id as posts_id1_5_1_, postslist0_.created_date as created_2_5_1_, postslist0_.modified_date as modified3_5_1_, postslist0_.content as content4_5_1_, postslist0_.description as descript5_5_1_, postslist0_.likes as likes6_5_1_, postslist0_.member_id as member_i9_5_1_, postslist0_.secret as secret7_5_1_, postslist0_.title as title8_5_1_ from posts postslist0_ where postslist0_.member_id=?
Hibernate: select tempsaveli0_.member_id as member_i7_9_0_, tempsaveli0_.temp_save_id as temp_sav1_9_0_, tempsaveli0_.temp_save_id as temp_sav1_9_1_, tempsaveli0_.created_date as created_2_9_1_, tempsaveli0_.modified_date as modified3_9_1_, tempsaveli0_.content as content4_9_1_, tempsaveli0_.member_id as member_i7_9_1_, tempsaveli0_.temp_code as temp_cod5_9_1_, tempsaveli0_.title as title6_9_1_ from temp_save tempsaveli0_ where tempsaveli0_.member_id=?
Hibernate: delete from member where member_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
