<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" tests="16" skipped="0" failures="0" errors="0" timestamp="2022-12-03T11:13:45" hostname="DESKTOP-4HIAQNR" time="0.502">
  <properties/>
  <testcase name="/posts 게시글 등록시 데이터 검증 내용" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.018"/>
  <testcase name="게시글 수정시 DB 수정 실패 데이터 검증 제목" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.018"/>
  <testcase name="/api/v1/posts/{postsId} 요청시 글 단건 조회 성공" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.015"/>
  <testcase name="/api/v1/posts/{postsId} 요청시 글 단건 조회 실패" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.015"/>
  <testcase name="게시글 삭제시 DB 삭제 실패" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.016"/>
  <testcase name="글 목록 첫번째 페이지 조회" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.075"/>
  <testcase name="글 목록 두번째 페이지 조회" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.061"/>
  <testcase name="게시글 수정시 DB 수정 실패 데이터 검증 내용" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.019"/>
  <testcase name="회원별로 글 목록" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.11"/>
  <testcase name="/posts 게시글 등록시 데이터 검증 제목" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.014"/>
  <testcase name="/posts 게시글 등록시 데이터 검증 소개" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.013"/>
  <testcase name="게시글 삭제시 DB 삭제" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.013"/>
  <testcase name="게시글 수정시 DB 수정 성공" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.014"/>
  <testcase name="게시글 수정시 DB 수정 실패" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.015"/>
  <testcase name="/posts 게시글 등록시 DB 저장" classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.016"/>
  <testcase name="?page=1이 아닌 ?page=0으로 요청해도 첫 페이지를 가져온다." classname="com.azurealstn.alog.controller.api.posts.PostsApiControllerTest" time="0.056"/>
  <system-out><![CDATA[2022-12-03 20:13:45.477  INFO 16012 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.azurealstn.alog.controller.api.posts.PostsApiControllerTest], using SpringBootContextLoader
2022-12-03 20:13:45.478  INFO 16012 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.azurealstn.alog.controller.api.posts.PostsApiControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2022-12-03 20:13:45.478  INFO 16012 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.azurealstn.alog.controller.api.posts.PostsApiControllerTest]: PostsApiControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2022-12-03 20:13:45.479  INFO 16012 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.azurealstn.alog.AlogApplication for test class com.azurealstn.alog.controller.api.posts.PostsApiControllerTest
2022-12-03 20:13:45.480  INFO 16012 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2022-12-03 20:13:45.481  INFO 16012 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@26ee00a9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@152d019b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@7aeb3664, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@108b47b4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@46b6e644, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3bea06d0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@18115fdf, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@52ed0d8e, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@23184551, org.springframework.test.context.event.EventPublishingTestExecutionListener@482f1b64, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@5a524a19, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@60e9bda0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@13a4e21, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@317e9159, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@79b417ed, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@549db1c6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@785a632]
2022-12-03 20:13:45.483  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@1cdece3d, testMethod = posts_create_api_validate_content@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.484  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.484  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.485  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/posts
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"374"]
             Body = {"title":"안녕하세요","content":"","member":{"createdDate":"2022-12-03T20:13:45.4875656","modifiedDate":"2022-12-03T20:13:45.4875656","id":340,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글","secret":null}
    Session Attrs = {member=SessionMemberDto(id=340, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#create(PostsCreateRequestDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"code":"400","message":"클라이언트의 잘못된 요청이 있습니다. (application/json)","validation":[{"fieldName":"content","errorMessage":"내용이 비어있습니다."}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.500  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@1cdece3d, testMethod = posts_create_api_validate_content@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.502  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@61a2d9ee, testMethod = modify_posts_api_x_title@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.503  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.503  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.503  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/v1/posts/565
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"95"]
             Body = {"title":"    ","content":"내용입니다.","description":"소개글입니다.","secret":null}
    Session Attrs = {member=SessionMemberDto(id=341, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#modify(Long, PostsModifyRequestDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"code":"400","message":"클라이언트의 잘못된 요청이 있습니다. (application/json)","validation":[{"fieldName":"title","errorMessage":"제목이 비어있습니다."}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.519  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@61a2d9ee, testMethod = modify_posts_api_x_title@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.521  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@26772e54, testMethod = select_posts_o@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.522  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.522  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.522  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/auth/posts-data/566
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {member=SessionMemberDto(id=342, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#findById(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"id":566,"title":"foo","content":"bar","member":{"createdDate":"2022-12-03T20:13:45.5255739","modifiedDate":"2022-12-03T20:13:45.5255739","id":342,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.536  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@26772e54, testMethod = select_posts_o@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.537  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@4e1210de, testMethod = select_posts_x@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.538  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.538  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.539  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select posts0_.posts_id as posts_id1_5_0_, posts0_.created_date as created_2_5_0_, posts0_.modified_date as modified3_5_0_, posts0_.content as content4_5_0_, posts0_.description as descript5_5_0_, posts0_.likes as likes6_5_0_, posts0_.member_id as member_i9_5_0_, posts0_.secret as secret7_5_0_, posts0_.title as title8_5_0_, member1_.member_id as member_i1_3_1_, member1_.created_date as created_2_3_1_, member1_.modified_date as modified3_3_1_, member1_.email as email4_3_1_, member1_.email_auth as email_au5_3_1_, member1_.name as name6_3_1_, member1_.picture as picture7_3_1_, member1_.role as role8_3_1_, member1_.short_bio as short_bi9_3_1_, member1_.username as usernam10_3_1_ from posts posts0_ left outer join member member1_ on posts0_.member_id=member1_.member_id where posts0_.posts_id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/auth/posts-data/568
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {member=SessionMemberDto(id=343, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#findById(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.azurealstn.alog.Infra.exception.posts.PostsNotFound

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"code":"404","message":"해당 글이 없습니다.","validation":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.551  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@4e1210de, testMethod = select_posts_x@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.553  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@555cc0ba, testMethod = delete_posts_api_x@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.554  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.554  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.554  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select posts0_.posts_id as posts_id1_5_0_, posts0_.created_date as created_2_5_0_, posts0_.modified_date as modified3_5_0_, posts0_.content as content4_5_0_, posts0_.description as descript5_5_0_, posts0_.likes as likes6_5_0_, posts0_.member_id as member_i9_5_0_, posts0_.secret as secret7_5_0_, posts0_.title as title8_5_0_, member1_.member_id as member_i1_3_1_, member1_.created_date as created_2_3_1_, member1_.modified_date as modified3_3_1_, member1_.email as email4_3_1_, member1_.email_auth as email_au5_3_1_, member1_.name as name6_3_1_, member1_.picture as picture7_3_1_, member1_.role as role8_3_1_, member1_.short_bio as short_bi9_3_1_, member1_.username as usernam10_3_1_ from posts posts0_ left outer join member member1_ on posts0_.member_id=member1_.member_id where posts0_.posts_id=?

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /api/v1/posts/569
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {member=SessionMemberDto(id=344, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#posts(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.azurealstn.alog.Infra.exception.posts.PostsNotFound

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"code":"404","message":"해당 글이 없습니다.","validation":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.568  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@555cc0ba, testMethod = delete_posts_api_x@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.569  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@1435a1f8, testMethod = findAll_posts_first_page@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.570  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.570  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.571  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_ where posts0_.secret=?
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_ where posts0_.secret=? order by posts0_.posts_id desc limit ?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/auth/posts
       Parameters = {page=[1], size=[9]}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {member=SessionMemberDto(id=345, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#posts(PostsSearchDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = [{"id":598,"title":"test 제목 - 30","content":"뭐로 할까 - 30","member":{"createdDate":"2022-12-03T20:13:45.5735838","modifiedDate":"2022-12-03T20:13:45.5735838","id":345,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 30","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":597,"title":"test 제목 - 29","content":"뭐로 할까 - 29","member":{"createdDate":"2022-12-03T20:13:45.5735838","modifiedDate":"2022-12-03T20:13:45.5735838","id":345,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 29","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":596,"title":"test 제목 - 28","content":"뭐로 할까 - 28","member":{"createdDate":"2022-12-03T20:13:45.5735838","modifiedDate":"2022-12-03T20:13:45.5735838","id":345,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 28","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":595,"title":"test 제목 - 27","content":"뭐로 할까 - 27","member":{"createdDate":"2022-12-03T20:13:45.5735838","modifiedDate":"2022-12-03T20:13:45.5735838","id":345,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 27","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":594,"title":"test 제목 - 26","content":"뭐로 할까 - 26","member":{"createdDate":"2022-12-03T20:13:45.5735838","modifiedDate":"2022-12-03T20:13:45.5735838","id":345,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 26","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":593,"title":"test 제목 - 25","content":"뭐로 할까 - 25","member":{"createdDate":"2022-12-03T20:13:45.5735838","modifiedDate":"2022-12-03T20:13:45.5735838","id":345,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 25","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":592,"title":"test 제목 - 24","content":"뭐로 할까 - 24","member":{"createdDate":"2022-12-03T20:13:45.5735838","modifiedDate":"2022-12-03T20:13:45.5735838","id":345,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 24","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":591,"title":"test 제목 - 23","content":"뭐로 할까 - 23","member":{"createdDate":"2022-12-03T20:13:45.5735838","modifiedDate":"2022-12-03T20:13:45.5735838","id":345,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 23","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":590,"title":"test 제목 - 22","content":"뭐로 할까 - 22","member":{"createdDate":"2022-12-03T20:13:45.5735838","modifiedDate":"2022-12-03T20:13:45.5735838","id":345,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 22","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.643  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@1435a1f8, testMethod = findAll_posts_first_page@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.645  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@5a021583, testMethod = findAll_posts_second_page@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.646  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.646  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.646  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_ where posts0_.secret=?
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_ where posts0_.secret=? order by posts0_.posts_id desc limit ? offset ?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/auth/posts
       Parameters = {page=[2], size=[9]}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#posts(PostsSearchDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = [{"id":619,"title":"test 제목 - 21","content":"뭐로 할까 - 21","member":{"createdDate":"2022-12-03T20:13:45.6486011","modifiedDate":"2022-12-03T20:13:45.6486011","id":346,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 21","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":618,"title":"test 제목 - 20","content":"뭐로 할까 - 20","member":{"createdDate":"2022-12-03T20:13:45.6486011","modifiedDate":"2022-12-03T20:13:45.6486011","id":346,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 20","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":617,"title":"test 제목 - 19","content":"뭐로 할까 - 19","member":{"createdDate":"2022-12-03T20:13:45.6486011","modifiedDate":"2022-12-03T20:13:45.6486011","id":346,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 19","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":616,"title":"test 제목 - 18","content":"뭐로 할까 - 18","member":{"createdDate":"2022-12-03T20:13:45.6486011","modifiedDate":"2022-12-03T20:13:45.6486011","id":346,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 18","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":615,"title":"test 제목 - 17","content":"뭐로 할까 - 17","member":{"createdDate":"2022-12-03T20:13:45.6486011","modifiedDate":"2022-12-03T20:13:45.6486011","id":346,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 17","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":614,"title":"test 제목 - 16","content":"뭐로 할까 - 16","member":{"createdDate":"2022-12-03T20:13:45.6486011","modifiedDate":"2022-12-03T20:13:45.6486011","id":346,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 16","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":613,"title":"test 제목 - 15","content":"뭐로 할까 - 15","member":{"createdDate":"2022-12-03T20:13:45.6486011","modifiedDate":"2022-12-03T20:13:45.6486011","id":346,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 15","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":612,"title":"test 제목 - 14","content":"뭐로 할까 - 14","member":{"createdDate":"2022-12-03T20:13:45.6486011","modifiedDate":"2022-12-03T20:13:45.6486011","id":346,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 14","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":611,"title":"test 제목 - 13","content":"뭐로 할까 - 13","member":{"createdDate":"2022-12-03T20:13:45.6486011","modifiedDate":"2022-12-03T20:13:45.6486011","id":346,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 13","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.705  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@5a021583, testMethod = findAll_posts_second_page@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.709  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@69f1887c, testMethod = modify_posts_api_x_content@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.710  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.710  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.711  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/v1/posts/629
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"96"]
             Body = {"title":"제목입니다.","content":"     ","description":"소개글입니다.","secret":null}
    Session Attrs = {member=SessionMemberDto(id=347, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#modify(Long, PostsModifyRequestDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"code":"400","message":"클라이언트의 잘못된 요청이 있습니다. (application/json)","validation":[{"fieldName":"content","errorMessage":"내용이 비어있습니다."}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.727  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@69f1887c, testMethod = modify_posts_api_x_content@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.728  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@316b57e0, testMethod = findAll_posts_by_member@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.730  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.731  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.733  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_ where posts0_.member_id=? order by posts0_.posts_id desc
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/posts/by-member
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {member=SessionMemberDto(id=348, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#postsListByMember()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = [{"id":659,"title":"test 제목 - 30","content":"뭐로 할까 - 30","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 30","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":658,"title":"test 제목 - 29","content":"뭐로 할까 - 29","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 29","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":657,"title":"test 제목 - 28","content":"뭐로 할까 - 28","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 28","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":656,"title":"test 제목 - 27","content":"뭐로 할까 - 27","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 27","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":655,"title":"test 제목 - 26","content":"뭐로 할까 - 26","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 26","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":654,"title":"test 제목 - 25","content":"뭐로 할까 - 25","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 25","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":653,"title":"test 제목 - 24","content":"뭐로 할까 - 24","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 24","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":652,"title":"test 제목 - 23","content":"뭐로 할까 - 23","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 23","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":651,"title":"test 제목 - 22","content":"뭐로 할까 - 22","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 22","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":650,"title":"test 제목 - 21","content":"뭐로 할까 - 21","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 21","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":649,"title":"test 제목 - 20","content":"뭐로 할까 - 20","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 20","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":648,"title":"test 제목 - 19","content":"뭐로 할까 - 19","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 19","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":647,"title":"test 제목 - 18","content":"뭐로 할까 - 18","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 18","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":646,"title":"test 제목 - 17","content":"뭐로 할까 - 17","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 17","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":645,"title":"test 제목 - 16","content":"뭐로 할까 - 16","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 16","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":644,"title":"test 제목 - 15","content":"뭐로 할까 - 15","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 15","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":643,"title":"test 제목 - 14","content":"뭐로 할까 - 14","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 14","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":642,"title":"test 제목 - 13","content":"뭐로 할까 - 13","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 13","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":641,"title":"test 제목 - 12","content":"뭐로 할까 - 12","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 12","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":640,"title":"test 제목 - 11","content":"뭐로 할까 - 11","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 11","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":639,"title":"test 제목 - 10","content":"뭐로 할까 - 10","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 10","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":638,"title":"test 제목 - 9","content":"뭐로 할까 - 9","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 9","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":637,"title":"test 제목 - 8","content":"뭐로 할까 - 8","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 8","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":636,"title":"test 제목 - 7","content":"뭐로 할까 - 7","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 7","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":635,"title":"test 제목 - 6","content":"뭐로 할까 - 6","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 6","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":634,"title":"test 제목 - 5","content":"뭐로 할까 - 5","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 5","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":633,"title":"test 제목 - 4","content":"뭐로 할까 - 4","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 4","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":632,"title":"test 제목 - 3","content":"뭐로 할까 - 3","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 3","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":631,"title":"test 제목 - 2","content":"뭐로 할까 - 2","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 2","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":630,"title":"test 제목 - 1","content":"뭐로 할까 - 1","member":{"createdDate":"2022-12-03T20:13:45.7356224","modifiedDate":"2022-12-03T20:13:45.7356224","id":348,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 1","secret":null,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.838  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@316b57e0, testMethod = findAll_posts_by_member@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.840  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@6f37fb78, testMethod = posts_create_api_validate_title@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.841  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.841  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.842  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/posts
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"375"]
             Body = {"title":"","content":"안녕하세요?","member":{"createdDate":"2022-12-03T20:13:45.8441547","modifiedDate":"2022-12-03T20:13:45.8441547","id":349,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글","secret":null}
    Session Attrs = {member=SessionMemberDto(id=349, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#create(PostsCreateRequestDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"code":"400","message":"클라이언트의 잘못된 요청이 있습니다. (application/json)","validation":[{"fieldName":"title","errorMessage":"제목이 비어있습니다."}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.852  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@6f37fb78, testMethod = posts_create_api_validate_title@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.854  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@1122c793, testMethod = posts_create_api_validate_description@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.855  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.856  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.856  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/posts
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"981"]
             Body = {"title":"안녕하세요","content":"제목입니다.","member":{"createdDate":"2022-12-03T20:13:45.8581588","modifiedDate":"2022-12-03T20:13:45.8581588","id":350,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯글자가다섯","secret":null}
    Session Attrs = {member=SessionMemberDto(id=350, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#create(PostsCreateRequestDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"code":"400","message":"클라이언트의 잘못된 요청이 있습니다. (application/json)","validation":[{"fieldName":"description","errorMessage":"포스트 소개 글을 150자 내로 적어주세요."}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.867  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@1122c793, testMethod = posts_create_api_validate_description@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.869  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@137fbb47, testMethod = delete_posts_api@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.870  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.870  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.870  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /api/v1/posts/660
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {member=SessionMemberDto(id=351, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#posts(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: delete from posts where posts_id=?
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.881  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@137fbb47, testMethod = delete_posts_api@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.882  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@2c56d4ab, testMethod = modify_posts_api_o@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.883  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.883  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.884  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/v1/posts/661
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"107"]
             Body = {"title":"제목입니다.","content":"내용입니다.","description":"소개글입니다.","secret":null}
    Session Attrs = {member=SessionMemberDto(id=352, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#modify(Long, PostsModifyRequestDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = 661
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: update posts set created_date=?, modified_date=?, content=?, description=?, likes=?, member_id=?, secret=?, title=? where posts_id=?
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.895  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@2c56d4ab, testMethod = modify_posts_api_o@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.897  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@5451d7a0, testMethod = modify_posts_api_x@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.898  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.898  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.899  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select posts0_.posts_id as posts_id1_5_0_, posts0_.created_date as created_2_5_0_, posts0_.modified_date as modified3_5_0_, posts0_.content as content4_5_0_, posts0_.description as descript5_5_0_, posts0_.likes as likes6_5_0_, posts0_.member_id as member_i9_5_0_, posts0_.secret as secret7_5_0_, posts0_.title as title8_5_0_, member1_.member_id as member_i1_3_1_, member1_.created_date as created_2_3_1_, member1_.modified_date as modified3_3_1_, member1_.email as email4_3_1_, member1_.email_auth as email_au5_3_1_, member1_.name as name6_3_1_, member1_.picture as picture7_3_1_, member1_.role as role8_3_1_, member1_.short_bio as short_bi9_3_1_, member1_.username as usernam10_3_1_ from posts posts0_ left outer join member member1_ on posts0_.member_id=member1_.member_id where posts0_.posts_id=?

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/v1/posts/663
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"107"]
             Body = {"title":"제목입니다.","content":"내용입니다.","description":"소개글입니다.","secret":null}
    Session Attrs = {member=SessionMemberDto(id=353, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#modify(Long, PostsModifyRequestDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.azurealstn.alog.Infra.exception.posts.PostsNotFound

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"code":"404","message":"해당 글이 없습니다.","validation":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.910  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@5451d7a0, testMethod = modify_posts_api_x@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.912  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@5b478eab, testMethod = create_posts@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.913  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.913  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.914  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_ where member0_.email=?
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/posts
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"398"]
             Body = {"title":"제목입니다.","content":"내용입니다.","member":{"createdDate":"2022-12-03T20:13:45.9161704","modifiedDate":"2022-12-03T20:13:45.9161704","id":354,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개입니다.","secret":null}
    Session Attrs = {member=SessionMemberDto(id=354, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#create(PostsCreateRequestDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = 663
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.928  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@5b478eab, testMethod = create_posts@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:45.930  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@620b0fad, testMethod = first_page_zero@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:45.931  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:45.931  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:45.931  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_ where posts0_.secret=?
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_ where posts0_.secret=? order by posts0_.posts_id desc limit ?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/auth/posts
       Parameters = {page=[0], size=[9]}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.azurealstn.alog.controller.api.posts.PostsApiController
           Method = com.azurealstn.alog.controller.api.posts.PostsApiController#posts(PostsSearchDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = [{"id":693,"title":"test 제목 - 30","content":"뭐로 할까 - 30","member":{"createdDate":"2022-12-03T20:13:45.9331749","modifiedDate":"2022-12-03T20:13:45.9331749","id":355,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 30","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":692,"title":"test 제목 - 29","content":"뭐로 할까 - 29","member":{"createdDate":"2022-12-03T20:13:45.9331749","modifiedDate":"2022-12-03T20:13:45.9331749","id":355,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 29","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":691,"title":"test 제목 - 28","content":"뭐로 할까 - 28","member":{"createdDate":"2022-12-03T20:13:45.9331749","modifiedDate":"2022-12-03T20:13:45.9331749","id":355,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 28","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":690,"title":"test 제목 - 27","content":"뭐로 할까 - 27","member":{"createdDate":"2022-12-03T20:13:45.9331749","modifiedDate":"2022-12-03T20:13:45.9331749","id":355,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 27","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":689,"title":"test 제목 - 26","content":"뭐로 할까 - 26","member":{"createdDate":"2022-12-03T20:13:45.9331749","modifiedDate":"2022-12-03T20:13:45.9331749","id":355,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 26","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":688,"title":"test 제목 - 25","content":"뭐로 할까 - 25","member":{"createdDate":"2022-12-03T20:13:45.9331749","modifiedDate":"2022-12-03T20:13:45.9331749","id":355,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 25","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":687,"title":"test 제목 - 24","content":"뭐로 할까 - 24","member":{"createdDate":"2022-12-03T20:13:45.9331749","modifiedDate":"2022-12-03T20:13:45.9331749","id":355,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 24","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":686,"title":"test 제목 - 23","content":"뭐로 할까 - 23","member":{"createdDate":"2022-12-03T20:13:45.9331749","modifiedDate":"2022-12-03T20:13:45.9331749","id":355,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 23","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null},{"id":685,"title":"test 제목 - 22","content":"뭐로 할까 - 22","member":{"createdDate":"2022-12-03T20:13:45.9331749","modifiedDate":"2022-12-03T20:13:45.9331749","id":355,"email":"azurealstn@naver.com","name":"슬로우스타터","picture":"test.jpg","role":"MEMBER","emailAuth":true,"username":"haha","shortBio":"안녕하세요!","roleKey":"ROLE_MEMBER"},"description":"소개글 - 22","secret":false,"previousTime":"2022년 12월 3일","hashTagNames":[],"likeCount":0,"commentCount":0,"storeFilename":null,"totalRowCount":0,"imageUrl":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:45.984  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@794efdf testClass = PostsApiControllerTest, testInstance = com.azurealstn.alog.controller.api.posts.PostsApiControllerTest@620b0fad, testMethod = first_page_zero@PostsApiControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@263b0a8d testClass = PostsApiControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
