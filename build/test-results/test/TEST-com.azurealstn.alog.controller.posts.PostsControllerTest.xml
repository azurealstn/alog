<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.azurealstn.alog.controller.posts.PostsControllerTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2022-12-03T11:13:46" hostname="DESKTOP-4HIAQNR" time="0.091">
  <properties/>
  <testcase name="/api/v1/auth/posts/{postsId} 요청시 글 상세 화면" classname="com.azurealstn.alog.controller.posts.PostsControllerTest" time="0.07"/>
  <testcase name="/api/v1/write 호출시 게시글 작성 페이지 이동" classname="com.azurealstn.alog.controller.posts.PostsControllerTest" time="0.02"/>
  <system-out><![CDATA[2022-12-03 20:13:46.643  INFO 16012 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.azurealstn.alog.controller.posts.PostsControllerTest], using SpringBootContextLoader
2022-12-03 20:13:46.644  INFO 16012 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.azurealstn.alog.controller.posts.PostsControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2022-12-03 20:13:46.644  INFO 16012 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.azurealstn.alog.controller.posts.PostsControllerTest]: PostsControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2022-12-03 20:13:46.651  INFO 16012 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.azurealstn.alog.AlogApplication for test class com.azurealstn.alog.controller.posts.PostsControllerTest
2022-12-03 20:13:46.652  INFO 16012 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2022-12-03 20:13:46.653  INFO 16012 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@236e2729, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@e51fa39, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2cf97fb4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4f940c29, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1d113d9d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1c109c34, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7bf344dd, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@14e9eace, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@c01b, org.springframework.test.context.event.EventPublishingTestExecutionListener@18690d13, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@79dd676f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@22395d00, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@243f5144, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@74eed145, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@661a26a8, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@ea3a636, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@504863d7]
2022-12-03 20:13:46.656  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6572bcb5 testClass = PostsControllerTest, testInstance = com.azurealstn.alog.controller.posts.PostsControllerTest@40dac99d, testMethod = posts_detail@PostsControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10832790 testClass = PostsControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:46.657  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:46.657  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:46.658  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into posts (posts_id, created_date, modified_date, content, description, likes, member_id, secret, title) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select hashtag0_.hashtag_id as hashtag_1_2_, hashtag0_.created_date as created_2_2_, hashtag0_.modified_date as modified3_2_, hashtag0_.name as name4_2_ from hashtag hashtag0_ left outer join posts_hashtag_map postshasht1_ on (hashtag0_.hashtag_id=postshasht1_.hashtag_id) left outer join posts posts2_ on (postshasht1_.posts_id=posts2_.posts_id) where posts2_.posts_id=?
Hibernate: select postslike0_.id as id1_8_, postslike0_.created_date as created_2_8_, postslike0_.modified_date as modified3_8_, postslike0_.member_id as member_i4_8_, postslike0_.posts_id as posts_id5_8_ from posts_like postslike0_ where postslike0_.posts_id=?
Hibernate: select postslike0_.id as id1_8_, postslike0_.created_date as created_2_8_, postslike0_.modified_date as modified3_8_, postslike0_.member_id as member_i4_8_, postslike0_.posts_id as posts_id5_8_ from posts_like postslike0_ where postslike0_.member_id=? and postslike0_.posts_id=? limit ?
Hibernate: select comment0_.comment_id as comment_1_0_, comment0_.created_date as created_2_0_, comment0_.modified_date as modified3_0_, comment0_.content as content4_0_, comment0_.is_comment_me as is_comme5_0_, comment0_.level as level6_0_, comment0_.member_id as member_i8_0_, comment0_.posts_id as posts_id9_0_, comment0_.up_comment_id as up_comme7_0_ from comment comment0_ where comment0_.posts_id=?
Hibernate: select comment0_.comment_id as comment_1_0_, comment0_.created_date as created_2_0_, comment0_.modified_date as modified3_0_, comment0_.content as content4_0_, comment0_.is_comment_me as is_comme5_0_, comment0_.level as level6_0_, comment0_.member_id as member_i8_0_, comment0_.posts_id as posts_id9_0_, comment0_.up_comment_id as up_comme7_0_ from comment comment0_ where comment0_.level=? and comment0_.posts_id=?
Hibernate: select postsimage0_.posts_image_id as posts_im1_7_, postsimage0_.created_date as created_2_7_, postsimage0_.modified_date as modified3_7_, postsimage0_.image_url as image_ur4_7_, postsimage0_.original_filename as original5_7_, postsimage0_.posts_id as posts_id8_7_, postsimage0_.store_filename as store_fi6_7_, postsimage0_.thumbnail_yn as thumbnai7_7_ from posts_image postsimage0_ left outer join posts posts1_ on (postsimage0_.posts_id=posts1_.posts_id) where postsimage0_.thumbnail_yn=? and posts1_.posts_id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/auth/posts/696
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {member=SessionMemberDto(id=377, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.posts.PostsController
           Method = com.azurealstn.alog.controller.posts.PostsController#detail_posts(Long, Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = posts/detailed-posts
             View = null
        Attribute = existHeart
            value = false
        Attribute = likeCount
            value = 0
        Attribute = member
            value = SessionMemberDto(id=377, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)
           errors = []
        Attribute = posts
            value = PostsResponseDto(id=696, title=foo, content=bar, member=Member(id=377, email=azurealstn@naver.com, name=슬로우스타터, picture=test.jpg, role=MEMBER, emailAuth=true, username=haha, shortBio=안녕하세요!, postsList=[], tempSaveList=[], commentList=[], postsLikeList=[], memberImageList=[]), description=소개글, secret=false, previousTime=2022년 12월 3일, hashTagNames=[], likeCount=0, commentCount=0, storeFilename=null, totalRowCount=0, imageUrl=null)
           errors = []
        Attribute = previousPostsDate
            value = 2022년 12월 3일
        Attribute = isAuthenticated
            value = true
        Attribute = isSecret
            value = false
        Attribute = hashTagList
            value = []
        Attribute = commentLevel0
            value = []
        Attribute = commentCountByPosts
            value = 0
        Attribute = postsImage
            value = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- SEO -->
    <meta name="description" content="이 사이트는 velog를 클론코딩한 alog 입니다. 이제 react가 아닌 mustache를 더한">
    <meta name="keywords" content="프론트엔드, 백엔드, 풀스택, alog, velog, 클론코딩, 사이드 프로젝트">
    <meta name="author" content="azurealstn">
    <title>alog</title>

    <!-- Open Graph (Facebook, Linkedin) -->
    <meta property="og:url" content="https://velog.io/">
    <meta property="og:type" content="website">
    <meta property="og:title" content="velog 클론코딩한 alog">
    <meta property="og:description" content="이 사이트는 velog를 클론코딩한 alog 입니다. 이제 react가 아닌 mustache를 더한">
    <meta property="og:image" content="/images/online.jpg">
    <meta property="og:image:secure_url" content="/images/online.jpg">
    <meta property="og:site_name" content="velog 클론코딩">
    <meta property="og:locale" content="ko-KR">

    <!-- twitter card -->
    <meta name="twitter:card" content="summary">
    <meta name="twitter:title" content="velog 클론코딩한 alog">
    <meta name="twitter:description" content="이 사이트는 velog를 클론코딩한 alog 입니다. 이제 react가 아닌 mustache를 더한">
    <meta name="twitter:image" content="/images/online.jpg">
    <meta name="twitter:url" content="https://velog.io/">
    <meta name="twitter:site" content="@azurealstn">
    <meta name="twitter:creator" content="@azurealstn">

    <!-- fabicon -->
    <link rel="icon" type="image/png" sizes="512x512" href="/images/leaf-fabicon.png">

    <!-- apple fabicon -->
    <link rel="apple-touch-icon" sizes="512x512" href="/images/leaf-fabicon.png">

    <!-- CSS Reset -->
    <link rel="stylesheet" href="/css/normalize.css">

    <!-- FontAwesome -->
    <script src="https://kit.fontawesome.com/32f48298df.js" crossorigin="anonymous"></script>

    <!-- Font -->
    <link href='//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSansNeo.css' rel='stylesheet' type='text/css'>
    <link href="https://fonts.googleapis.com/css2?family=Concert+One&family=Fuzzy+Bubbles:wght@700&family=Nanum+Gothic&family=Silkscreen&display=swap" rel="stylesheet">

    <!-- Toast   -->
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">

    <!-- CSS load -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.48.4/codemirror.min.css"/>
    <link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/toastui-editor.min.css" />
    <link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/theme/toastui-editor-dark.min.css">
    <link rel="stylesheet" href="https://uicdn.toast.com/tui-color-picker/latest/tui-color-picker.min.css">
    <link rel="stylesheet" href="https://uicdn.toast.com/editor-plugin-color-syntax/latest/toastui-editor-plugin-color-syntax.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/themes/prism.min.css">
    <link rel="stylesheet" href="https://uicdn.toast.com/editor-plugin-code-syntax-highlight/latest/toastui-editor-plugin-code-syntax-highlight.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <link rel="stylesheet" href="/css/header.css">
    <link rel="stylesheet" href="/css/posts.css">

    <!-- JavaScript load -->
    <script src="https://code.jquery.com/jquery-3.6.1.min.js" integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=" crossorigin="anonymous" defer></script>
    <script src="https://uicdn.toast.com/editor/latest/toastui-editor-all.min.js" defer></script>
    <script src="https://uicdn.toast.com/tui-color-picker/latest/tui-color-picker.min.js" defer></script>
    <script src="https://uicdn.toast.com/editor-plugin-color-syntax/latest/toastui-editor-plugin-color-syntax.min.js" defer></script>
    <script src="https://uicdn.toast.com/editor-plugin-code-syntax-highlight/latest/toastui-editor-plugin-code-syntax-highlight-all.min.js" defer></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js" defer></script>
    <script src="/js/header.js" defer></script>
    <script src="/js/detailed-posts.js" defer></script>

</head>
<body>
<!-- header -->
<div class="root">
    <header>
        <div class="header">
            <div class="head-container">
                <div class="head-logo">
                    <a href="/">alog</a>
                </div>
                <div class="head-content">
                    <a href="/api/v1/auth/search" class="search">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </a>
                        <button class="head-btn new-posts" style="margin-right: 1.25rem;">새 글 작성</button>
                        <div class="thumbnail-profile">
                            <img src="test.jpg" alt="thumbnail-profile">
                            <i class="fa-solid fa-sort-down"></i>
                        </div>
                        <div class="menu hide">
                            <div class="menu-wrapper">
                                <a href="/api/v1/my-alog/377" class="menu-item">
                                    <div class="menu-name">
                                        내 에이로그
                                    </div>
                                </a>
                                <a href="/api/v1/temp-saves" class="menu-item">
                                    <div class="menu-name">
                                        임시 글
                                    </div>
                                </a>
                                <a href="/api/v1/liked/377" class="menu-item">
                                    <div class="menu-name">
                                        좋아요 목록
                                    </div>
                                </a>
                                <a href="/api/v1/setting/377" class="menu-item">
                                    <div class="menu-name">
                                        설정
                                    </div>
                                </a>
                                <a href="/logout" class="menu-item">
                                    <div class="menu-name">
                                        로그아웃
                                    </div>
                                </a>
                            </div>
                        </div>
                </div>
            </div>
        </div>
    </header>

<div class="detail">
    <div class="detail-top">
        <input type="hidden" id="postsId" value="696">
        <input type="hidden" id="memberId" value="377">
        <input type="hidden" id="secret" value="false">
        <div class="head-wrapper">
            <h1>foo</h1>
                <div class="modify-posts-buttons">
                    <button id="update-btn">수정</button>
                    <button id="delete-btn" onclick="postsMain.deletePosts(696)">삭제</button>
                </div>
            <div class="posts-info">
                <div class="information">
                    <span class="username">
                      <a href="/api/v1/my-alog/377">슬로우스타터</a>
                    </span>
                    <span class="separator">·</span>
                    <span>2022년 12월 3일</span>
                </div>
                <div class="posts-likes">
                        <button class="like-btn">
                            <i class="fa-solid fa-heart"></i>
                            <span class="">0</span>
                        </button>
                </div>
            </div>
            <div class="posts-tags">
            </div>
            <div class="quick-menu">
                <div class="menu-like">
                    <div class="menu-container">
                            <div class="like-heart">
                                <i class="fa-solid fa-heart"></i>
                            </div>
                        <div class="like-count">0</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="detail-bottom">
        <div class="posts-body">
            <!-- toast ui editor viewer -->
            <div id="viewer">

            </div>
        </div>
    </div>
    <div class="member-info">
        <div class="member-container">
            <div class="info">
                <a href="/api/v1/my-alog/377" style="cursor: pointer;">
                    <img src="test.jpg" alt="프로필 사진">
                </a>
                <div class="sub-info">
                    <div class="name">
                        <a href="/api/v1/my-alog/377">슬로우스타터</a>
                    </div>
                    <div>안녕하세요!</div>
                </div>
            </div>
            <div class="divide"></div>
        </div>
    </div>
    <div class="replay">
        <h4>
            <span>0</span>
            <span>개의 댓글</span>
        </h4>
        <div class="replay-container">
            <div class="replay-write">
                <input type="hidden" name="level" id="level" value="0">
                <textarea name="content" id="content" class="replay-content" placeholder="댓글을 작성하세요"></textarea>
                <div class="buttons-wrapper">
                    <button class="write-btn">댓글 작성</button>
                </div>
            </div>
            <div class="replay-list">
            </div>
        </div>
    </div>
</div>

<!-- modal -->
<div class="modal-bg" id="modal-bg-hide"></div>
<div class="modal-container-detail" id="modal-container-hide">
    <div class="wrapper">
        <div class="gray-block">
            <div>
                <img src="/images/pumpkin.png" alt="welcome">
                <div class="welcome">Welcome!</div>
            </div>
        </div>
        <div class="white-block">
            <div class="exit-wrapper">
                <button id="hide-btn"><i class="fa-solid fa-xmark"></i></button>
            </div>
            <div class="block-content">
                <div class="content-wrapper">
                    <div class="upper-wrapper">
                        <h2 class="change-login">로그인</h2>
                        <section>
                            <h4>이메일로 <span class="change-login">로그인</span></h4>
                            <form class="login-form" onsubmit="return false">
                                <input autocomplete="off" type="text" id="email" name="email" placeholder="이메일을 입력하세요.">
                                <button class="login-btn change-login" id="login-btn">로그인</button>
                            </form>
                            <div class="message" style="display: none;">
                                <i class="fa-solid fa-check"></i>
                                <div class="message-description">
                                    <span class="emailCheck">회원가입</span> 링크가 이메일로 전송되었습니다.
                                </div>
                            </div>
                        </section>
                        <section>
                            <h4>소셜 계정으로 <span class="change-login">로그인</span></h4>
                            <div class="social-login">
                                <a href="/oauth2/authorization/google" class="social-link" style="background: white;">
                                    <img class="google" src="/images/social-google.png" alt="google">
                                </a>
                                <a href="/oauth2/authorization/naver" class="social-link">
                                    <img src="/images/social-naver.png" alt="naver">
                                </a>
                            </div>
                        </section>
                    </div>
                    <div class="foot">
                        <span class="member">아직 회원이 아니신가요?</span>
                        <div class="link">회원가입</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:46.724  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@6572bcb5 testClass = PostsControllerTest, testInstance = com.azurealstn.alog.controller.posts.PostsControllerTest@40dac99d, testMethod = posts_detail@PostsControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10832790 testClass = PostsControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-12-03 20:13:46.726  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6572bcb5 testClass = PostsControllerTest, testInstance = com.azurealstn.alog.controller.posts.PostsControllerTest@35c3bf1c, testMethod = write@PostsControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10832790 testClass = PostsControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@24e2d0d1]; rollback [true]
2022-12-03 20:13:46.727  INFO 16012 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2022-12-03 20:13:46.727  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-12-03 20:13:46.728  INFO 16012 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: insert into member (member_id, created_date, modified_date, email, email_auth, name, picture, role, short_bio, username) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/write
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {prevUrl=/, member=SessionMemberDto(id=378, name=슬로우스타터, email=azurealstn@naver.com, picture=test.jpg, username=haha, shortBio=안녕하세요!)}

Handler:
             Type = com.azurealstn.alog.controller.posts.PostsController
           Method = com.azurealstn.alog.controller.posts.PostsController#write(HttpServletRequest, Model, String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = /posts/create-posts
             View = null
        Attribute = prevUrl
            value = /
        Attribute = tempSave
            value = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- SEO -->
    <meta name="description" content="이 사이트는 velog를 클론코딩한 alog 입니다. 이제 react가 아닌 mustache를 더한">
    <meta name="keywords" content="프론트엔드, 백엔드, 풀스택, alog, velog, 클론코딩, 사이드 프로젝트">
    <meta name="author" content="azurealstn">
    <title>alog</title>

    <!-- Open Graph (Facebook, Linkedin) -->
    <meta property="og:url" content="https://velog.io/">
    <meta property="og:type" content="website">
    <meta property="og:title" content="velog 클론코딩한 alog">
    <meta property="og:description" content="이 사이트는 velog를 클론코딩한 alog 입니다. 이제 react가 아닌 mustache를 더한">
    <meta property="og:image" content="/images/online.jpg">
    <meta property="og:image:secure_url" content="/images/online.jpg">
    <meta property="og:site_name" content="velog 클론코딩">
    <meta property="og:locale" content="ko-KR">

    <!-- twitter card -->
    <meta name="twitter:card" content="summary">
    <meta name="twitter:title" content="velog 클론코딩한 alog">
    <meta name="twitter:description" content="이 사이트는 velog를 클론코딩한 alog 입니다. 이제 react가 아닌 mustache를 더한">
    <meta name="twitter:image" content="/images/online.jpg">
    <meta name="twitter:url" content="https://velog.io/">
    <meta name="twitter:site" content="@azurealstn">
    <meta name="twitter:creator" content="@azurealstn">

    <!-- fabicon -->
    <link rel="icon" type="image/png" sizes="512x512" href="/images/leaf-fabicon.png">

    <!-- apple fabicon -->
    <link rel="apple-touch-icon" sizes="512x512" href="/images/leaf-fabicon.png">

    <!-- CSS Reset -->
    <link rel="stylesheet" href="/css/normalize.css">

    <!-- FontAwesome -->
    <script src="https://kit.fontawesome.com/32f48298df.js" crossorigin="anonymous"></script>

    <!-- Font -->
    <link href='//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSansNeo.css' rel='stylesheet' type='text/css'>
    <link href="https://fonts.googleapis.com/css2?family=Concert+One&family=Fuzzy+Bubbles:wght@700&family=Silkscreen&display=swap" rel="stylesheet">

    <!-- CSS load -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.48.4/codemirror.min.css"/>
    <link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/toastui-editor.min.css" />
    <link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/theme/toastui-editor-dark.min.css">
    <link rel="stylesheet" href="https://uicdn.toast.com/tui-color-picker/latest/tui-color-picker.min.css">
    <link rel="stylesheet" href="https://uicdn.toast.com/editor-plugin-color-syntax/latest/toastui-editor-plugin-color-syntax.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/themes/prism.min.css">
    <link rel="stylesheet" href="https://uicdn.toast.com/editor-plugin-code-syntax-highlight/latest/toastui-editor-plugin-code-syntax-highlight.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <link href="https://unpkg.com/@yaireo/tagify/dist/tagify.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="/css/posts.css">

    <script src="https://code.jquery.com/jquery-3.6.1.min.js" integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=" crossorigin="anonymous" defer></script>
    <script src="https://uicdn.toast.com/editor/latest/toastui-editor-all.min.js" defer></script>
    <script src="https://uicdn.toast.com/tui-color-picker/latest/tui-color-picker.min.js" defer></script>
    <script src="https://uicdn.toast.com/editor-plugin-color-syntax/latest/toastui-editor-plugin-color-syntax.min.js" defer></script>
    <script src="https://uicdn.toast.com/editor-plugin-code-syntax-highlight/latest/toastui-editor-plugin-code-syntax-highlight-all.min.js" defer></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js" defer></script>
    <script src="https://unpkg.com/@yaireo/tagify" defer></script>
    <script src="/js/posts.js" defer></script>

</head>
<body>
<div class="root">
    <input type="hidden" id="prevUrl" value="/"/>
    <div class="posts">
        <div class="posts-container">
            <div class="left">
                <div class="left-container">
                    <div class="wrapper">
                        <div>
                            <div class="title-header">
                                <textarea name="title" id="title" placeholder="제목을 입력하세요" style="height: 66px;"
                                          oninput="postsMain.autoGrow(this)" maxlength="200"></textarea>
                                <div class="line"></div>
                                <div class="tag">
                                    <input type="text" class="tag-input" placeholder="태그를 입력하세요">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="editor"></div>
            <div class="button-content">
                <div class="button-area">
                    <button class="exit">
                        <i class="fa-regular fa-circle-left"></i>
                        <span>나가기</span>
                    </button>
                    <div class="write-area">
                        <buttom class="temp-save">임시저장</buttom>
                        <button class="create-posts">출간하기</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal" style="display: none;">
        <div class="modal-container">
            <div class="thumbnail-area">
                <section class="thumbnail-section">
                    <h3>포스트 미리보기</h3>
                    <div class="contents">
                        <div class="thumbnail-init">
                            <div class="thumbnail-insert">
                                <div class="thumbnail-flex">
                                    <i class="fa-regular fa-image"></i>
                                </div>
                            </div>
                        </div>
                        <input type="file" id="thumbnailImage" name="thumbnailImage" style="display: none;">
                        <input type="hidden" id="thumbnailImageHidden" value>
                        <div class="thumbnail-buttons">
                            <button class="thumbnail-upload" onclick="postsMain.thumbnailUploadClick()">썸네일 업로드</button>
                            <button class="thumbnail-delete">썸네일 제거</button>
                        </div>
                        <div class="description">
                            <h4></h4>
                            <textarea name="description" id="description" maxlength="150"
                                      placeholder="당신의 포스트를 짧게 소개해보세요."></textarea>
                            <div class="limit">
                                <span class="count">0</span>
                                <span>/150</span>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
            <div class="line"></div>
            <div class="secret-area">
                <div>
                    <section class="secret-section">
                        <h3>공개 설정</h3>
                        <div class="contents">
                            <input type="hidden" id="secret" name="secret" value="false">
                            <button class="public active">
                                <i class="fa-solid fa-earth-americas"></i>
                                <div class="title">전체 공개</div>
                            </button>
                            <button class="secret non-active">
                                <i class="fa-solid fa-key"></i>
                                <div class="title">비공개</div>
                            </button>
                        </div>
                    </section>
                    <section class="image">
                        <img src="/images/fly.png" alt="fly">
                    </section>
                </div>
                <div class="foot">
                    <button class="cancel">취소</button>
                    <button class="publish">출간하기</button>
                </div>
            </div>
        </div>
    </div>
</div>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select posts0_.posts_id as posts_id1_5_, posts0_.created_date as created_2_5_, posts0_.modified_date as modified3_5_, posts0_.content as content4_5_, posts0_.description as descript5_5_, posts0_.likes as likes6_5_, posts0_.member_id as member_i9_5_, posts0_.secret as secret7_5_, posts0_.title as title8_5_ from posts posts0_
Hibernate: select member0_.member_id as member_i1_3_, member0_.created_date as created_2_3_, member0_.modified_date as modified3_3_, member0_.email as email4_3_, member0_.email_auth as email_au5_3_, member0_.name as name6_3_, member0_.picture as picture7_3_, member0_.role as role8_3_, member0_.short_bio as short_bi9_3_, member0_.username as usernam10_3_ from member member0_
2022-12-03 20:13:46.745  INFO 16012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@6572bcb5 testClass = PostsControllerTest, testInstance = com.azurealstn.alog.controller.posts.PostsControllerTest@35c3bf1c, testMethod = write@PostsControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@10832790 testClass = PostsControllerTest, locations = '{}', classes = '{class com.azurealstn.alog.AlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f6c03cb, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4ae33a11, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a94964, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34a75079, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@64beebb7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68d279ec], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
